buildscript {
    ext {
        springBootVersion = '1.5.7.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.junit.platform:junit-platform-gradle-plugin:1.0.2")
        classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6")
    }
}

plugins {
    id "com.github.hierynomus.license" version "0.14.0"
}

license {
    header rootProject.file('LICENSE')
    strictCheck false
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: "application"
apply plugin: 'org.springframework.boot'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'org.sonarqube'

group = 'com'
version = '1.0.0-SNAPSHOT'
jar.baseName = 'theeye-backend'
jar.archiveName = "theeye.jar"

ext {
    nativesPath = '/home/kuba/Applications/Tools/opencv/opencv-3.3.1/build/lib'

}

sourceCompatibility = 1.8

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
    repositories {
        mavenCentral()

    }

    compileJava {
        options.compilerArgs = [
                '-Amapstruct.suppressGeneratorTimestamp=true',
                '-Amapstruct.suppressGeneratorVersionInfoComment=true',
                '-Amapstruct.defaultComponentModel=spring',
                '-Amapstruct.unmappedTargetPolicy=ERROR'
        ]
    }
}

bootRun {
    if (project.hasProperty('nativeLibPath')) {
        systemProperty 'java.library.path', (project.nativeLibPath.split("\\s+"))[0]
    } else {
        systemProperty 'java.library.path','/home/kuba/Applications/Tools/opencv/opencv-3.3.1/build/lib'
    }
}

test {
    if (project.hasProperty('nativeLibPath')) {
        systemProperty 'java.library.path', (project.nativeLibPath.split("\\s+"))[0]
    } else {
        systemProperty 'java.library.path','/home/kuba/Applications/Tools/opencv/opencv-3.3.1/build/lib'
    }
}

junitPlatformTest {
    if (project.hasProperty('nativeLibPath')) {
        systemProperty 'java.library.path', (project.nativeLibPath.split("\\s+"))[0]
    } else {
        systemProperty 'java.library.path','/home/kuba/Applications/Tools/opencv/opencv-3.3.1/build/lib'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.3.1'
}

compileJava.dependsOn(processResources)

task switchToProd {
    nativesPath = '/theeye/opencv/opencv-3.3.1/build/lib'
}

task switchToLocal {
    nativesPath = '/home/kuba/Applications/Tools/opencv/opencv-3.3.1/build/lib'
}

group = 'com.theeye'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile "org.springframework.boot:spring-boot-configuration-processor"
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.18'
    compile group: 'com.google.guava', name: 'guava', version: '23.0'
    compile group: 'io.vavr', name: 'vavr', version: '0.9.1'
    compile group: 'org.mapstruct', name: 'mapstruct-jdk8', version: '1.2.0.Final'
    compile group: 'org.mapstruct', name: 'mapstruct-processor', version: '1.2.0.Final'
    compile group: 'org.jetbrains', name: 'annotations', version: '15.0'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.6'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'org.apiguardian', name: 'apiguardian-api', version: '1.0.0'
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.7.0'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.7.0'

    compile files('libs/opencv-331.jar')

    testCompile 'org.springframework.security:spring-security-test'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.0.2'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.0.2'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.0.2'
}


jar {
    from(configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }

    manifest {
        attributes 'Implementation-Title': 'Theeye Backend',
                'Implementation-Version': version,
                'Built-By': System.getProperty('user.name'),
                'Built-Date': new Date(),
                'Built-JDK': System.getProperty('java.version'),
                'Main-Class': 'com.theeye.Application'
    }
}
